<% content_for :head do %>
  <script src="https://code.jquery.com/jquery-3.4.1.slim.min.js" integrity="sha384-J6qa4849blE2+poT4WnyKhv5vZF5SrPo0iEjwBvKU7imGFAV0wwj1yYfoRSJoZ+n" crossorigin="anonymous"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.0/dist/umd/popper.min.js" integrity="sha384-Q6E9RHvbIyZFJoft+2mJbHaEWldlvI9IOYy5n3zV9zzTtmI3UksdQRVvoxMfooAo" crossorigin="anonymous"></script>

  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh" crossorigin="anonymous">
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js" integrity="sha384-wfSDF2E50Y2D1uUdj0O3uMBJnjuUD4Ih7YwaYd1iqfktj0Uod8GCExl3Og8ifwB6" crossorigin="anonymous"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.1/axios.js"></script>
<% end %>

<div class="container">
<div class="row">
<div class="col">

<h1>Real Code Runner - Prototype</h1>
<ul>
  <li>
    <a href="/prototype" data-turbolinks=false>
      back
    </a>
  </li>
</ul>

<hr />

<section>
  <h3><a name="listing-details-around-a-challenge">Listing details around a challenge (AXIOS)</a></h3>

  <script type="text/javascript">
    function fetchGraphqlUsingAxios(authToken, body, resultElement) {
      axios({
        url: "<%= URI(request.protocol + request.host_with_port) + "/graphql" %>",
        headers: {
          "CONTENT-TYPE": "application/json",
          "AUTHORIZATION": `Token ${authToken}`,
        },
        data: JSON.stringify(body),
        method: "POST",
        }).then(response => {
          resultElement.innerHTML = JSON.stringify(response.data, null, 2).replace(/</g, "&lt;").replace(/>/g, "&gt;");
        }).catch(response => {
          console.log(response)
          throw new Error(`Request rejected with status ${response.status}`);
        })
    }

    function fetchChallengeBody(challengeId) {
      return {
        operationName: "Challenge",
        variables: { id: challengeId },
        query: `query Challenge($id: ID!) {
          challenge(id: $id) {
            id
            title
            description
            metadata {
              readme
              metadata {
                id
                uri
                line
                name
                keyword
                description
                elements {
                  id
                  line
                  name
                  keyword
                  description
                  steps {
                    line
                    name
                    keyword
                    hints
                    helperImages
                  }
                }
              }
            }
            features {
              title
              text
            }
            featureFileUrls {
              filename
              url
            }
            helperImageUrls {
              filename
              url
            }
          }
        }`
      }
    }

    function fetchChallenge(event) {
      const authToken = document.getElementById("auth-token").value;
      const challengeId = document.getElementById("challenge-id").value;
      const body = fetchChallengeBody(challengeId);
      const preElement = document.getElementById("challenge-call-result");
      preElement.innerHTML = '...'

      fetchGraphqlUsingAxios(authToken, body, preElement);

      event.preventDefault ? event.preventDefault() : event.returnValue = false;
    }
  </script>

  <form>
    <div class="form-group">
      <label>Auth token</label>
      <input
        id="auth-token"
        type="text"
        class="form-control"
        placeholder="auth token from /admin/users"
        value="<%= @jwt %>"
        />
    </div>
    <div class="form-group">
      <label>Challenge ID</label>
      <input
        id="challenge-id"
        type="text"
        class="form-control"
        placeholder="challenge id"
        value="<%= @challenge_id %>"
        />
    </div>
    <div>
      <button class="btn btn-primary" onClick="fetchChallenge(event)">
        fetch challenge
      </button>
    </div>
  </form>
  <div>
    <strong>Result</strong>
    <pre id="challenge-call-result">...</pre>
  </div>

  <div id="accordion" class="mt-3">
    <div class="card">
      <div class="card-header" id="headingTwo">
        <h5 class="mb-0">
          <button class="btn btn-link collapsed" data-toggle="collapse" data-target="#collapseDetails" aria-expanded="false" aria-controls="collapseTwo">
            Code Sample
          </button>
        </h5>
      </div>
      <div id="collapseDetails" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
        <div class="card-body">
          <pre>
<%=
  '
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.19.1/axios.js"></script>
<script type="text/javascript">
  function fetchGraphqlUsingAxios(authToken, body, resultElement) {
    axios({
      url: "' + URI(request.protocol + request.host_with_port).to_s + "/graphql" + '",
      headers: {
        "CONTENT-TYPE": "application/json",
        "AUTHORIZATION": `Token ${authToken}`,
      },
      data: JSON.stringify(body),
      method: "POST",
      }).then(response => {
        resultElement.innerHTML = JSON.stringify(response.data, null, 2).replace(/</g, "&lt;").replace(/>/g, "&gt;");
      }).catch(response => {
        console.log(response)
        throw new Error(`Request rejected with status ${response.status}`);
      })
  }

  function fetchChallengeBody(challengeId) {
    return {
      operationName: "Challenge",
      variables: { id: challengeId },
      query: `query Challenge($id: ID!) {
        challenge(id: $id) {
          id
          title
          description
          metadata {
            readme
            metadata {
              id
              uri
              line
              name
              keyword
              description
              elements {
                id
                line
                name
                keyword
                description
                steps {
                  line
                  name
                  keyword
                  hints
                  helperImages
                }
              }
            }
          }
          features {
            title
            text
          }
          featureFileUrls {
            filename
            url
          }
          helperImageUrls {
            filename
            url
          }
        }
      }`
    }
  }

  function fetchChallenge(event) {
    const authToken = document.getElementById("auth-token").value;
    const challengeId = document.getElementById("challenge-id").value;
    const body = fetchChallengeBody(challengeId);
    const preElement = document.getElementById("challenge-call-result");
    preElement.innerHTML = "..."

    fetchGraphqlUsingAxios(authToken, body, preElement);

    event.preventDefault ? event.preventDefault() : event.returnValue = false;
  }
</script>

<form>
  <div>
    <input
      id="auth-token"
      type="text"
      value="' + @jwt + '"
      />
  </div>
  <div class="form-group">
    <input
      id="challenge-id"
      type="text"
      value="' + @challenge_id + '"
      />
  </div>
  <div>
    <button onClick="fetchChallenge(event)">
      fetch challenge
    </button>
  </div>
</form>
<div>
  <strong>Result</strong>
  <pre id="challenge-call-result">...</pre>
</div>
'
%>
          </pre>
        </div>
      </div>
    </div>
  </div>
</section>


</div>
</div>
</div>
